// <auto-generated />
using ChatGPT.DataAccess.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatGPT.DataAccess.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    partial class ChatDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatGPT.DataAccess.Data.DbEntities.Instance", b =>
                {
                    b.Property<string>("InstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("FrequencyPenalty")
                        .HasColumnType("float");

                    b.Property<string>("InstanceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTokens")
                        .HasColumnType("int");

                    b.Property<double>("PresencePenalty")
                        .HasColumnType("float");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<double>("TopP")
                        .HasColumnType("float");

                    b.HasKey("InstanceId");

                    b.ToTable("Instances");
                });
#pragma warning restore 612, 618
        }
    }
}
